
Top-Down, Memoization
Bottom-Up, Tabulation

0 Fibonacci :- Result of current term is dependent on previous two

1 Factorial :- Factorial formula N! = N x (N-1)!

2 Stepping Stones :- Either take one step (n-1) OR skip one stone (n-2)

3 Matrix Chain Multiplication :- M[i,j] = M[i,k] + M[k+1,j] + P[i-1]*P[k]*P[j]

4 Weighted Job Scheduling :- 

	 1) First sort jobs according to finish time in ascending order.
	 2) Now initialize array of profit with initial profit.
	   
	   - Start with 1 job
	   - if there is only one job then maximum profit would be
	   - if there is only two(non-overlapping) job then maximum profit would be
	   - if there is only three(non-overlapping) job then maximum profit would be
	   - repeat this process & find maximum out of all
	   
	 Formula:- Profit[i]  =  Profit[ P[i-1] ] + P[i]

5 Minimum Coin Denomination :-

		Example:- Coins[] = { 1, 7, 10}  & Amount  = 15
		
									15(n)
								/	  |          \		
						         14(n-1)	8(n-7)	    5(n-10)	
					         	/		|		\
					(n-1)    (n-7)	(n-10)		|	(n-1)   (n-7)	(n-10)	
									|
									|
							   7(n-1)    1(n-7)	X(n-10)	
									|
									|
									|
						              0(n-1)   X(n-7)   X(n-10)		Here Final Value Become 0(Zero)
												So, Count height of tree & that would be our answer
										

